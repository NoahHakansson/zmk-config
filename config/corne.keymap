/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: home_row_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <210>;
            flavor = "tap-preferred";
        };

        hrl: home_row_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "home_row_layer";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <210>;
            quick-tap-ms = <210>;
            flavor = "tap-preferred";
        };

        SE_AO: SE_AO {
            compatible = "zmk,behavior-mod-morph";
            label = "SE_AO";
            bindings = <&SE_AO_LOWERCASE>, <&SE_AO_UPPERCASE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        SE_AO_LOWERCASE: SE_AO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(LA(LC(LG(SPACE))))>,
                <&macro_tap>,
                <&kp LEFT_BRACKET>,
                <&macro_tap>,
                <&kp LS(LA(LC(LG(SPACE))))>,
                <&macro_tap>;

            label = "SE_AO";
        };

        SE_AO_UPPERCASE: SE_AO_UPPERCASE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp LS(LA(LC(LG(SPACE))))>,
                <&macro_tap>,
                <&kp LS(LEFT_BRACKET)>,
                <&macro_tap>,
                <&kp LS(LA(LC(LG(SPACE))))>,
                <&macro_tap>;

            label = "SE_AO_UPPERCASE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp SINGLE_QUOTE  &kp Q         &kp W        &kp E                 &kp R                     &kp T       &kp DELETE  &kp Y            &kp U          &kp I        &kp O    &kp P
&gresc            &kp A         &hrm LGUI S  &hrm LSHIFT D         &hrm LEFT_ALT F           &hrl 4 G    &kp BSPC    &hrm LEFT_ALT H  &hrm LSHIFT J  &hrm LGUI K  &kp L    &kp SEMI
&sl 5             &hrm LCTRL Z  &kp X        &kp C                 &kp V                     &kp B       &kp FSLH    &hrm LCTRL N     &kp M          &kp COMMA    &kp DOT  &kp BSLH
                                             &kp LC(LA(LS(LGUI)))  &hrm LS(LA(LCTRL)) SPACE  &sl 1       &kp RET     &hrm LSHIFT TAB  &sl 2
            >;

            label = "Base";
        };

        Code {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp EXCL     &kp AT        &kp HASH       &kp DLLR  &none    &kp CARET  &kp PLUS        &kp LPAR  &kp RPAR  &kp QUESTION  &kp GRAVE
&to 0  &kp PERCENT  &kp ASTERISK  &kp AMPERSAND  &kp PIPE  &none    &kp MINUS  &kp EQUAL       &kp LBRC  &kp RBRC  &kp COLON     &none
&none  &kp BSLH     &kp LT        &kp GT         &none     &none    &kp BSLH   &kp UNDERSCORE  &kp LBKT  &kp RBKT  &none         &none
                                  &none          &none     &to 2    &to 0      &kp LSHFT       &none
            >;

            label = "Code";
        };

        Numbers {
            bindings = <
&none  &kp F1   &kp F2  &kp F3  &kp F4  &kp F5    &kp F6    &kp F7  &kp F8  &kp F9     &kp F10  &kp F11
&none  &kp N1   &kp N2  &kp N3  &kp N4  &kp N5    &kp BSPC  &kp N6  &kp N7  &kp N8     &kp N9   &kp N0
&none  &kp F12  &none   &none   &none   &none     &none     &none   &none   &kp COMMA  &kp DOT  &none
                        &none   &none   &to 3     &to 0     &none   &none
            >;

            label = "Numbers";
        };

        BT {
            bindings = <
&none  &none  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR    &none  &none  &none  &none  &none  &none
&to 0  &none  &none  &none         &none         &none         &none  &none  &none  &none  &none  &none
&none  &none  &none  &none         &none         &none         &none  &none  &none  &none  &none  &none
                     &none         &none         &none         &to 0  &none  &none
            >;

            label = "BT";
        };

        Nav {
            bindings = <
&none  &none  &none  &none  &none  &none    &none     &kp C_VOLUME_DOWN  &kp C_PLAY_PAUSE  &kp C_NEXT   &kp C_VOLUME_UP  &none
&to 0  &none  &none  &none  &none  &none    &kp HOME  &kp LEFT           &kp DOWN          &kp UP       &kp RIGHT        &kp END
&none  &none  &none  &none  &none  &none    &none     &none              &kp PAGE_DOWN     &kp PAGE_UP  &none            &none
                     &none  &none  &none    &to 0     &none              &none
            >;

            label = "Nav";
        };

        SE {
            label = "SE";
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &SE_AO
&to 0  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none  &none  &none  &none
                     &none  &none  &none    &to 0  &none  &none
            >;
        };
    };
};
